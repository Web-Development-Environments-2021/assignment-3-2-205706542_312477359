openapi: 3.0.0
info:
  description: This is an API for assignment 3 in Web Development Environments course, made by Omer Marco and Nir Stenifeld.
  version: "1.0.0"
  title: Assignment 3.1
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Users
  - name: Auth
  - name: League
  - name: Players
  - name: Teams
  - name: Games
  - name: Search
paths:
  /login:
    post:
      tags:
        - Auth
      summary: A login request from the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 'User succesfully logged in'
        '401':
          description: 'Wrong username/password'
  /register:
    post:
      tags:
        - Auth
      summary: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Inventory item to add      
      responses:
        '201':
          description: 'A new user has been added'
        '400':
          description: 'Wrong input parameter'
        '409':
          description: 'Username taken'
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        '200':
          description: 'logged out successfully'
  /players/playerDetails/{playerId}:
    get:
      tags:
      - Players
      summary: get full details on a player
      parameters:
        - in: path
          name: playerId
          description: player's ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'request succeed. returning full details'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Player'
        '404':
          description: player id was not found
  /league/getDetails:
    get:
      tags:
        - League
      summary: get details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
        "400":
          description: wrong input parameters
  /teams/teamFullDetails/{teamId}:
    get:
      tags:
        - Teams
      summary: get full details on a team
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: request succeed. returning full details
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Team'
        '404':
          description: team id does not exist
  /search/teams/{teamName}:
    get:
      tags:
        - Search
        - Teams
      summary: get full details on a team
      parameters:
        - in: path
          name: teamName
          description: team's name or part or it
          required: true
          schema:
            type: string
      responses:
        '200':
          description: request succeed. returning list of team previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamPreview'
        '204':
          description: "no results"
  /search/players/{playerName}:
    get:
      tags:
        - Search
        - Player
      summary: get preview of players with that name in the leageu
      parameters:
        - in: path
          name: playerName
          description: player's first/last/full name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: request succeed. returning list of player previews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerPreview'
        '204':
          description: "no results"
  /games/nextLeagueGame:
    get:
      tags:
        - Games
        - League
      summary: info about the next game in the league
      responses:
        '200':
          description: 'request succeed. returning details about the game'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FutureGame'
        '204':
          description: 'no future games were found'
components:
  schemas:
    User:
      type: object
      description: Model containing user info
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username. contains 3-8 lettters only
          example: bigboi
        firstname:
          type: string
          description: The user's first name
          example: John
        lastname:
          type: string
          description: The user's last name
          example: Cena
        country:
          type: string
          description: The user's country
          example: Israel
        password:
          type: string
          format: password
          minLength: 5
          maxLength: 10
          description: The user's password. 5-10 chars. At least 1 digit and 1 special char.
          example: as3hm4l@
        email:
          type: string
          format: email
          description: The user's email address
          example: john@cena.com
        image-url:
          type: string
          format: URL
          description: URL for the user's image
          example: https://cloudinaru.com/myImage
    LoginRequest:
      type: object
      description: Model containing login info
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username. contains 3-8 lettters only
          example: bigboi
        password:
          type: string
          format: password
          minLength: 5
          maxLength: 10
          description: The user's password. 5-10 chars. At least 1 digit and 1 special char.
          example: as3hm4l@
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
    Player:
      type: object
      description: Full details of a player
      properties:
        id:
          type: integer
          description: players's ID
          example: 123456789
        name:
          type: string
          description: player's full name
          example: 'Avi Nimni'
        teamName:
          type: string
          description: player's team name
          example: 'Maccabi Tel-Aviv'
        position:
          type: integer
          description: player's position in the team
          example: 1
        image_url:
          type: string
          format: URL
          description: URL for the player's image
          example: https://cloudinaru.com/aviNimni
        age:
          type: integer
          description: player's age
          example: 30
    PlayerPreview:
      type: object
      description: A preview of a player
      properties:
        id:
          type: integer
          description: The player's ID
          example: 123456789
        fullname:
          type: string
          description: The player's name
          example: 'Avi Nimni'
        teamName:
          type: string
          description: Player's team name
          example: 'Maccabi Tel-Aviv'
        positionId:
          type: integer
          description: player's position in the team
          example: 1
        image_url:
          type: string
          format: URL
          description: URL for the player's image
          example: https://cloudinaru.com/aviNimni
    TeamPreview:
      type: object
      description: team's preview for the search
      properties:
        id:
          type: integer
          description: The team's ID
          example: 123456789
        name:
          type: string
          description: The team's name
          example: 'Maccabi Tel-Aviv'
        logoPath:
          type: string
          format: url
          description: a url to the team's logo
          example: "https://cdn.sportmonks.com/images//soccer/teams/11/939.png"
    Team:
      type: object
      description: team's info
      properties:
        id:
          type: integer
          description: The team's ID
          example: 123456789
        name:
          type: string
          description: The team's name
          example: 'Maccabi Tel-Aviv'
        founded:
          type: integer
          description: "the year the team was founded"
          example: 2000
        logoPath:
          type: string
          format: url
          description: a url to the team's logo
          example: "https://cdn.sportmonks.com/images//soccer/teams/11/939.png"
        players:
          type: array
          items:
            $ref: "#/components/schemas/PlayerPreview"
        pastGames:
          type: array
          items:
            $ref: "#/components/schemas/PastGame"
        futureGames:
          type: array
          items:
            $ref: "#/components/schemas/FutureGame"
    FutureGame:
      type: object
      properties:
        gameId:
          type: integer
          description: id of the game
          example: 1
        date:
          type: string
          format: date
          description: date of the game
          example: '2021-05-29'
        time:
          type: string
          format: time
          description: the time the game starts
          example: '21:00'
        homeTeamId:
          type: integer
          description: id of the home team
          example: 8
        awayTeamId:
          type: integer
          description: id of the away team
          example: 9
        stadium:
          type: string
          description: name of the stadium the game will take place in
          example: 'Estádio do Dragão'
    PastGame:
      type: object
      properties:
        gameId:
          type: integer
          description: id of the game
          example: 1
        date:
          type: string
          format: date
          description: date of the game
          example: '2021-05-29'
        time:
          type: string
          format: time
          description: the time the game starts
          example: '21:00'
        homeTeamId:
          type: integer
          description: id of the home team
          example: 8
        awayTeamId:
          type: integer
          description: id of the away team
          example: 9
        stadium:
          type: string
          description: name of the stadium the game will take place in
          example: 'Estádio do Dragão'
        homeTeamScore:
          type: integer
          description: the number of the home team's goals in the game
          example: 2
        awayTeamScore:
          type: integer
          description: the number of the away team's goals in the game
          example: 0
        eventLog:
          type: array
          description: array of the game's event
          items:
            $ref: "#/components/schemas/GameEvent"
    GameEvent:
      type: object
      properties:
        id:
          type: integer
          description: id of the event
          example: 23
        gameId:
          type: integer
          description: id of the game
          example: 24
        date:
          type: string
          format: date
          description: date of the event
          example: 2020-05-24
        time:
          type: string
          format: time
          description: the time the event took place
          example: 22:12
        gameMinute:
          type: integer
          description: the minute in the game the event took place
          example: 89
        description:
          type: string
          description: a description of the event
          example: Goal - Nimni